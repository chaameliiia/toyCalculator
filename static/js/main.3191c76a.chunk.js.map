{"version":3,"sources":["components/buttons/Functions.js","components/buttons/Nums.js","components/buttons/Operands.js","components/ResultWindow.js","components/Calculator.js","components/RecordWindow.js","App.js","serviceWorker.js","index.js"],"names":["FuncStyled","styled","div","Functions","clickFunc","className","onClick","type","NumStyled","nums","id","eng","num","Nums","clickBtn","clickSubmit","map","v","key","OperStyled","symbols","sym","Operands","ResultWindowStyled","ResultWindow","clickRecord","CalculatorStyled","Calculator","useState","btnText","setBtnText","numFirst","setNumFirst","numSecond","setNumSecond","setResult","setOperand","countOper","setCountOper","action","method","name","e","preventDefault","target","console","log","slice","length","textContent","parseInt","ResutlWindowStyled","RecordWindow","CalcWrapperStyled","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3191c76a.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FuncStyled = styled.div`\r\n  width: 100%;\r\n\r\n  button {\r\n    background: #eee;\r\n\r\n    &:hover {\r\n      background: #333;\r\n      color: #fff;\r\n    }\r\n\r\n    &:active {\r\n      background: #444;\r\n    }\r\n  }\r\n  \r\n  .clear {\r\n    width: 50%;\r\n  }\r\n\r\n  .erase {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst Functions = ({ clickFunc }) => {\r\n  return (\r\n    <FuncStyled\r\n      className=\"functions\"\r\n      onClick={clickFunc}\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        className=\"clear\"\r\n      >\r\n        CE\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"erase\"\r\n      >\r\n        â¬…\r\n      </button>\r\n    </FuncStyled>\r\n  );\r\n};\r\n\r\nexport default Functions;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst NumStyled = styled.div`\r\n  width: 75%;\r\n\r\n  button {\r\n    width: 33.3%;\r\n  }\r\n\r\n  .number {\r\n    background: #fff;\r\n    \r\n    &:hover {\r\n      background: #333;\r\n      color: #fff;\r\n    }\r\n\r\n    &:active {\r\n      background: #444;\r\n    }\r\n  }\r\n\r\n  .zero {\r\n    width: 66.6%;\r\n  }\r\n\r\n  .total {\r\n    background: #eee;\r\n\r\n    &:hover {\r\n      background: #333;\r\n      color: #fff;\r\n    }\r\n\r\n    &:active {\r\n      background: #444;\r\n    }\r\n  }\r\n`;\r\n\r\nconst nums = [\r\n  {\r\n    id: 0,\r\n    eng: 'seven',\r\n    num: 7,\r\n  },\r\n  {\r\n    id: 1,\r\n    eng: 'eight',\r\n    num: 8,\r\n  },\r\n  {\r\n    id: 2,\r\n    eng: 'nine',\r\n    num: 9,\r\n  },\r\n  {\r\n    id: 3,\r\n    eng: 'four',\r\n    num: 4,\r\n  },\r\n  {\r\n    id: 4,\r\n    eng: 'five',\r\n    num: 5,\r\n  },\r\n  {\r\n    id: 5,\r\n    eng: 'six',\r\n    num: 6,\r\n  },\r\n  {\r\n    id: 6,\r\n    eng: 'one',\r\n    num: 1,\r\n  },\r\n  {\r\n    id: 7,\r\n    eng: 'two',\r\n    num: 2,\r\n  },\r\n  {\r\n    id: 8,\r\n    eng: 'three',\r\n    num: 3,\r\n  },\r\n  {\r\n    id: 9,\r\n    eng: 'zero',\r\n    num: 0,\r\n  },\r\n];\r\n\r\nconst Nums = ({ clickBtn, clickSubmit }) => {\r\n  return (\r\n    <NumStyled className=\"num\">\r\n      {nums.map(v => {\r\n        return (\r\n          <button\r\n            key={v.id}\r\n            type=\"button\"\r\n            onClick={clickBtn}\r\n            className={`number ${v.eng}`}\r\n          >\r\n            {v.num}\r\n          </button>\r\n        )\r\n      })}\r\n      <button\r\n        type=\"submit\"\r\n        onClick={clickSubmit}\r\n        className=\"total\"\r\n      >\r\n        =\r\n      </button>\r\n    </NumStyled>\r\n  );\r\n};\r\n\r\nexport default Nums;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst OperStyled = styled.div`\r\n  width: 25%;\r\n\r\n  button {\r\n    background: #eee;\r\n    width: 100%;\r\n\r\n    &:hover {\r\n      background: #333;\r\n      color: #fff;\r\n    }\r\n\r\n    &:active {\r\n      background: #444;\r\n    }\r\n  }\r\n`;\r\n\r\nconst symbols = [\r\n  {\r\n    id: 0,\r\n    eng: 'plus',\r\n    sym: '+',\r\n  },\r\n  {\r\n    id: 1,\r\n    eng: 'minus',\r\n    sym: '-',\r\n  },\r\n  {\r\n    id: 2,\r\n    eng: 'times',\r\n    sym: '*',\r\n  },\r\n  {\r\n    id: 3,\r\n    eng: 'devide',\r\n    sym: '/',\r\n  },\r\n];\r\n\r\nconst Operands = ({ clickBtn }) => {\r\n  return (\r\n    <OperStyled className=\"operands\">\r\n      {symbols.map(v => {\r\n        return (\r\n          <button\r\n            key={v.id}\r\n            type=\"submit\"\r\n            onClick={clickBtn}\r\n            className={v.eng}\r\n          >\r\n            {v.sym}\r\n          </button>\r\n        )\r\n      })}\r\n    </OperStyled>\r\n  );\r\n};\r\n\r\nexport default Operands;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ResultWindowStyled = styled.div`\r\n  background: #333;\r\n  border: 1px solid #333;\r\n  border-radius: 4px;\r\n  color: #fff;\r\n  height: 100px;\r\n  padding: .5rem;\r\n  text-align: right;\r\n  width: 100%;\r\n\r\n  .clickRecord {\r\n    border: 1px solid #fff;\r\n    height: 35%;\r\n    vertical-align: middle;\r\n    width: 100%;\r\n  }\r\n\r\n  .result {\r\n    border: 1px solid #ff0;\r\n    height: 65%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst ResultWindow = ({ clickRecord }) => {\r\n  return (\r\n    <ResultWindowStyled>\r\n      <p className=\"clickRecord\">\r\n        {clickRecord}\r\n      </p>\r\n      <p className=\"result\">\r\n      \r\n      </p>     \r\n    </ResultWindowStyled>\r\n  );\r\n};\r\n\r\nexport default ResultWindow;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Functions from './buttons/Functions';\r\nimport Nums from './buttons/Nums';\r\nimport Operands from './buttons/Operands';\r\nimport ResultWindow from './ResultWindow';\r\n\r\nconst CalculatorStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 65%;\r\n  \r\n  form {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n\r\n    button {\r\n      border: 1px solid #333;\r\n      border-radius: 4px;\r\n      height: 70px;\r\n      outline-style: none;\r\n\r\n      &:hover {\r\n        background: #333;\r\n        color: #fff;\r\n      }\r\n\r\n      &:active {\r\n        background: #444;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Calculator = () => {\r\n  const [btnText, setBtnText] = useState('');\r\n  const [numFirst, setNumFirst] = useState(0);\r\n  const [numSecond, setNumSecond] = useState(0);\r\n  const [result, setResult] = useState(0);\r\n  const [operand, setOperand] = useState('');\r\n  const [countOper, setCountOper] = useState(0);\r\n  \r\n  const _clickNum = e => {\r\n    e.preventDefault();\r\n    setBtnText(btnText + e.target.textContent);\r\n  };\r\n\r\n  const _clickSubmit = e => {\r\n    e.preventDefault();\r\n    setCountOper(0);\r\n    console.log(btnText);\r\n  }\r\n\r\n  const _clickOper = e => {\r\n    const textContent = e.target.textContent;\r\n    e.preventDefault();\r\n    setCountOper(countOper + 1);\r\n    setBtnText(btnText + textContent);\r\n    setOperand(textContent);\r\n    setNumFirst(parseInt(btnText));\r\n    console.log('numFirst', numFirst);\r\n    if(countOper > 0) {\r\n      setNumSecond(numSecond + textContent);\r\n    }\r\n    console.log('numSecond', numSecond);\r\n  }\r\n\r\n  const _clickFunc = e => {\r\n    e.preventDefault();\r\n\r\n    const clearing = () => {\r\n      console.log('clear');\r\n      setBtnText('');\r\n      setCountOper(0);\r\n      setNumFirst(0);\r\n      setResult(0);\r\n    };\r\n\r\n    const erasing = () => {\r\n      console.log('erase');\r\n      setBtnText(btnText.slice(0, btnText.length - 1));\r\n    };\r\n\r\n    switch(e.target.className) {\r\n      case 'clear':\r\n        clearing();\r\n        break;\r\n\r\n      case 'erase':\r\n        erasing();\r\n        break;\r\n\r\n      default: return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CalculatorStyled>\r\n      <ResultWindow\r\n        clickRecord={btnText}\r\n        className=\"ResultWindow\"\r\n      />\r\n      <form\r\n        action=\"/\"\r\n        id=\"calculator\"\r\n        method=\"get\"\r\n        name=\"calculator\"\r\n      >\r\n        <Functions\r\n          clickFunc={_clickFunc}\r\n        />\r\n        <Nums\r\n          clickBtn={_clickNum}\r\n          clickSubmit={_clickSubmit}\r\n        />\r\n        <Operands\r\n          clickBtn={_clickOper}\r\n        />\r\n      </form>\r\n    </CalculatorStyled>\r\n  );\r\n};\r\n\r\nexport default Calculator;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ResutlWindowStyled = styled.div`\r\n  border: 1px dotted #333;\r\n  border-radius: 4px;\r\n  width: 35%;\r\n`;\r\n\r\nconst RecordWindow = () => {\r\n  return (\r\n    <ResutlWindowStyled>\r\n      \r\n    </ResutlWindowStyled>\r\n  );\r\n};\r\n\r\nexport default RecordWindow;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Calculator from './components/Calculator';\r\nimport RecordWindow from './components/RecordWindow';\r\nimport 'asset/common.css';\r\n\r\nconst CalcWrapperStyled = styled.div`\r\n  display: flex;\r\n  left: 50%;\r\n  position: fixed;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 600px;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <CalcWrapperStyled className=\"calcWrapper\">\r\n      <Calculator />\r\n      <RecordWindow />\r\n    </CalcWrapperStyled>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}